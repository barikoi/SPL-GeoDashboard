name: Docker Staging Deploy

on:
  push:
    branches: ['staging']

env: 
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:  
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 
    
      - name: Branch name
        run: echo running on branch ${GITHUB_REF##*/}

      - name: Store variables
        id: get-store
        run: |
          echo version=$(jq -r '.version' package.json) >> $GITHUB_OUTPUT
          echo branch=${GITHUB_REF##*/} >> $GITHUB_OUTPUT
      
      - name: Current Version
        run: echo "Current version is ${{ steps.get-store.outputs.version }}"
        
      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ env.DOCKER_USERNAME }}/spl-geodashboard:${GITHUB_REF##*/}-${{ steps.get-store.outputs.version }}

      - name: Docker Push
        run: docker push ${{ env.DOCKER_USERNAME }}/spl-geodashboard:${GITHUB_REF##*/}-${{ steps.get-store.outputs.version }}

      - name: Run deployment command
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          script: |
            sudo -i
            cd /var/www/html/spl-geodashboard
            docker compose down
            docker image prune -af

            # Update docker image version
            sudo sed -i "s|image: .*|image: ${{ env.DOCKER_USERNAME }}/spl-geodashboard:${{ steps.get-store.outputs.branch }}-${{ steps.get-store.outputs.version }}|" docker-compose.yaml

            docker compose pull
            docker compose up -d

      # - name: Succeeded
      #   uses: rjstone/discord-webhook-notify@v1
      #   if: success()
      #   with:
      #     severity: info
      #     username: SPL GeoDashboard
      #     details: Deployment Succeeded ✅!
      #     webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      # - name: Failed
      #   uses: rjstone/discord-webhook-notify@v1
      #   if: failure()
      #   with:
      #     severity: error
      #     username: SPL GeoDashboard
      #     details: Deployment Failed ❌!
      #     webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      # - name: Cancelled
      #   uses: rjstone/discord-webhook-notify@v1
      #   if: cancelled()
      #   with:
      #     severity: warn
      #     username: SPL GeoDashboard
      #     details: Deployment Cancelled ⚠️!
      #     webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}



